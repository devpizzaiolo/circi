- if @pizza_preset
	
	/ - if @pizza_preset.gluten_free_only?
	/ 	p Gluten Free Only
	/ - else 
	/ 	p Not only Gluten Free
	
	
	/ FOR PIZZAS --------------------------------------------------------------------------------------------------------------------------------------------

	- if @order_item && @order_item.product_info['product_name']
		.image_heading style="background-image:url(#{@pizza_preset.pizza_image_angled.size_960.url});" class="#{unless @pizza_preset.show_images? then 'middle' end}"
			h2
				= @order_item.product_info['product_name'] 
				= " "
				- if @pizza_preset.spicy?
					img.subcat-icn src="/assets/ui/icn_spicy.png" align="top" data-toggle="tooltip" rel="tooltip" title="Spicy"
				- if @pizza_preset.pizzaiolo_favourites?
					img.subcat-icn src="/assets/ui/icn_pfav.png" align="top" data-toggle="tooltip" rel="tooltip" title="Pizzaiolo Favourite"
				- if @pizza_preset.customer_favourites?
					img.subcat-icn src="/assets/ui/icn_cfav.png" align="top" data-toggle="tooltip" rel="tooltip" title="Customer Favourite"
				- if @pizza_preset.health_check?
					img.subcat-icn src="/assets/ui/icn_healthcheck_sml.png" align="top" data-toggle="tooltip" rel="tooltip" title="Health Check"
				- if @pizza_preset.vegan?
					img.subcat-icn src="/assets/ui/icn_vegan.png" align="top" data-toggle="tooltip" rel="tooltip" title="Vegan"
				- if @pizza_preset.nut_free?
					= " "
					span.label.label-info Nut Free
	
		p.lead You can customize your pizza below.

	
	form#add_product

		- if @order_item
	
			| <!-- THere is a pizza!!! -->
			/ editing or updating the order-item
			- if @order_item.id
				input name="product[id]" type="hidden" value="#{@order_item.id}"
		
			input name="product[pizza_preset_id]" type="hidden" value="#{@order_item.product_info['pizza_preset_id']}"
			input name="product[product_type]" type="hidden" value="#{@order_item.product_info['product_type']}"
			input name="product[product_name]" type="hidden" value="#{@order_item.product_info['product_name']}"
	
		- else

			/ new order_item
			input name="product[product_type]" type="hidden" value="pizza"
			input name="product[product_name]" type="hidden" value="Maranare"
		
		/ .row style="#{unless @pizza_preset.gluten_free_only? then 'display:none;' end}"
		/ 	.span12
		/ 		- @gf = PizzaSize.where(:active => true, :name => 'Gluten Free').first
		/ 		h3 Size/Crust
		/ 		p= "#{@gf.name} #{@gf.num_slices}"
		
		.row

			.span4
				h3
					| Select Size
					- unless @order_item
						small Step 1 of 5
				fieldset
					- if @pizza_preset.gluten_free_only?
						- @ps = PizzaSize.where(:active => true, :gluten_free => true).order("position ASC")
					- else
						- @ps = PizzaSize.where(:active => true).order("position ASC")
						
					- @ps.each do |pizza_size|
						label.radio
							- if @order_item && @order_item.product_info['pizza_size'] == pizza_size.name.parameterize
								input type="radio" name="product[pizza_size]" value="#{pizza_size.name.parameterize}" id="product_pizza_size" topping-price="#{number_to_currency(pizza_size.topping_price)}" topping-price-double="#{number_to_currency(pizza_size.topping_price * 2)}" data-deep-dish-option-price="#{number_to_currency(pizza_size.deep_dish_option_price)}" checked=""
							- else
								input type="radio" name="product[pizza_size]" value="#{pizza_size.name.parameterize}" id="product_pizza_size" topping-price="#{number_to_currency(pizza_size.topping_price)}" topping-price-double="#{number_to_currency(pizza_size.topping_price * 2)}" data-deep-dish-option-price="#{number_to_currency(pizza_size.deep_dish_option_price)}"
							= pizza_size.external_name + " " + pizza_size.num_slices + " " + number_to_currency(pizza_size.price)
							
				br
				
			.span3#product_pizza_size_group class="#{if @order_item && @order_item.product_info['pizza_size'].present? && @order_item.product_info['pizza_size'].include?("gluten-free") then 'hideit' end}"
				h3
					| Select Crust
					- unless @order_item 
						small Step 2 of 5
				fieldset
					- PizzaCrust.where(:active => true).order("name ASC").each do |pizza_crust|
						label.radio
							- if @order_item && @order_item.product_info['pizza_crust'] && @order_item.product_info['pizza_crust'] == pizza_crust.name.parameterize
								input type="radio" name="product[pizza_crust]" value="#{pizza_crust.name.parameterize}" id="product_pizza_crust" checked=""
							- else
								input type="radio" name="product[pizza_crust]" value="#{pizza_crust.name.parameterize}" id="product_pizza_crust"
							= pizza_crust.name
				
				br
		
			.span5#product_pizza_crust_style_group class="#{if @order_item && @order_item.product_info['pizza_size'].present? && @order_item.product_info['pizza_size'].include?("gluten-free") then 'hideit' end}"
				h3 Select Crust Style
				fieldset
					
					- PizzaCrustStyle.where(:active => true).order("position ASC").each do |pizza_crust_style|
					
						label.radio
							- if @order_item && @order_item.product_info['pizza_crust_style'] && @order_item.product_info['pizza_crust_style'] == pizza_crust_style.name.parameterize
								input type="radio" name="product[pizza_crust_style]" value="#{pizza_crust_style.name.parameterize}" id="product_pizza_crust_style" checked=""
							- else
								input type="radio" name="product[pizza_crust_style]" value="#{pizza_crust_style.name.parameterize}" id="product_pizza_crust_style"
							= pizza_crust_style.name
					
					#deep_dish_option_price class="#{if @order_item && @order_item.product_info['pizza_size'].present? && @order_item.product_info['pizza_size'] == 'gluten-free' then 'hideit' end}"
						small 
							p.muted
								| Deep Dish option adds: 
								span#deep_dish_option_price
									- if @order_item && @order_item.product_info['pizza_size'].present?
										- @pizza_size = PizzaSize.where(:name => @order_item.product_info['pizza_size'].titlecase).first
										= number_to_currency(@pizza_size.deep_dish_option_price)
								
				br
						

		.row#product_toppings_group class="#{unless @order_item then 'hideit' end}"
			
			.span12
				hr
				h3
					| Select Toppings
					- unless @order_item
						small Step 3 of 5

			.clear
			
			

			- TypeOfTopping.where(:active => true).order("position ASC").each do |type_of_topping|
				.span2.toppings
					legend= type_of_topping.name
					- type_of_topping.toppings.where(:active => true).order("move_to_top DESC").order("name ASC").each do |topping|
			
						div id=topping.name.parameterize 
					
							input name="product[toppings][topping-#{topping.id}][id]" type="hidden" value="#{topping.id}"
							input name="product[toppings][topping-#{topping.id}][name]" type="hidden" value="#{topping.name}"
			
							label.checkbox.small
								- if @order_item.present? && @order_item.product_info['toppings']["topping-#{topping.id}"].present? && @order_item.product_info['toppings']["topping-#{topping.id}"]['selected']
									- selected = true
									input.hideshow_topping type="checkbox" id="product_toppings_topping-#{topping.id}_selected" name="product[toppings][topping-#{topping.id}][selected]" value="1" checked="" data-topping-id="#{topping.id}"
								- else
									- selected = false
									input.hideshow_topping type="checkbox" id="product_toppings_topping-#{topping.id}_selected" name="product[toppings][topping-#{topping.id}][selected]" value="1" data-topping-id="#{topping.id}"
								= topping.name
								
								br.hidden-phone
								
								span id="product_toppings_topping-#{topping.id}" class="#{unless selected == true then 'hideit' end} align-price" style="#{unless selected == true then 'display:none;' end}"
									- if topping.free_topping?
										small.muted	free
									- else
										small.muted.topping_price= number_to_currency(@pizza_size.topping_price)
					
							- pref = topping.name.parameterize + "-preference"
							select.span2.small.topping_preference id="product_toppings_topping-#{topping.id}_preference" name="product[toppings][topping-#{topping.id}][preference]" style="#{unless selected == true then 'display:none;' end}" class="#{unless selected == true then 'hideit' end}" data-topping-preference-id="#{topping.id}"
							
								- if topping.type_of_topping.preference_normal?
									- if @order_item && @order_item.product_info['toppings']["topping-#{topping.id}"].present? && @order_item.product_info['toppings']["topping-#{topping.id}"]['preference'] == "Normal"
										option selected="selected" value="Normal"
											| Normal
									- else
										option value="Normal" Normal
										
								- if topping.type_of_topping.preference_light?
									- if @order_item && @order_item.product_info['toppings']["topping-#{topping.id}"].present? && @order_item.product_info['toppings']["topping-#{topping.id}"]['preference'] == "Light"
										option selected="selected" value="Light"
											| Light
									- else
										option value="Light" Light
										
								- if topping.type_of_topping.preference_extra?
									
									- unless topping.extra_free?
										- topping_price = "topping_price_extra"
									- else
										- topping_price = ""
									
									- if @order_item && @order_item.product_info['toppings']["topping-#{topping.id}"].present? && @order_item.product_info['toppings']["topping-#{topping.id}"]['preference'] == "Extra"
										option selected="selected" value="Extra" class="#{topping_price}"
											| Extra
											- unless topping.extra_free?
												= " + #{number_to_currency(@pizza_size.topping_price * 1)}"
									- else
										option value="Extra" class="#{topping_price}"
											| Extra 
											- unless topping.extra_free?
												= " + #{number_to_currency(@pizza_size.topping_price * 1)}"
												
								- if topping.type_of_topping.preference_double?
								
									- unless topping.double_free?
										- topping_price_double = "topping_price_double"
									- else
										- topping_price_double = ""
								
									- if @order_item && @order_item.product_info['toppings']["topping-#{topping.id}"].present? && @order_item.product_info['toppings']["topping-#{topping.id}"]['preference'] == "Double"
										option selected="selected" value="Double" class="#{topping_price_double}"
											| Double
											- unless topping.double_free?
												= " + #{number_to_currency(@pizza_size.topping_price * 2)}"
									- else
										option value="Double" class="#{topping_price_double}"
											| Double
											- unless topping.double_free?
												= " + #{number_to_currency(@pizza_size.topping_price * 2)}"
						
							- position = topping.name.parameterize + "-position"
							select.span2.small.topping_position id="product_toppings_topping-#{topping.id}_position" name="product[toppings][topping-#{topping.id}][position]" class="#{unless selected == true then 'hideit' end}" style="#{unless selected == true then 'display:none;' end}" data-topping-position-id="#{topping.id}"
								- if @order_item && @order_item.product_info['toppings']["topping-#{topping.id}"].present? && @order_item.product_info['toppings']["topping-#{topping.id}"]['position'] == "Whole Pizza"
									option value="Whole Pizza" selected="selected"
										| Whole Pizza
								- else
									option value="Whole Pizza" Whole Pizza
									
								- if @order_item && @order_item.product_info['toppings']["topping-#{topping.id}"].present? && @order_item.product_info['toppings']["topping-#{topping.id}"]['position'] == "Left Side"
									option value="Left Side" selected="selected"
										| Left Side
								- else
									option value="Left Side"
										| Left Side
										
								- if @order_item && @order_item.product_info['toppings']["topping-#{topping.id}"].present? && @order_item.product_info['toppings']["topping-#{topping.id}"]['position'] == "Right Side"
									option value="Right Side" selected="selected"
										| Right Side
								- else
									option value="Right Side"
										| Right Side
											
											
				br
				
	
	div#gluten-free style="#{unless @order_item && @order_item.product_info['pizza_size'] == "gluten-free" then 'display:none;' end}"
		hr		
		.row
			.span12.text-center
				p.lead We make our own gluten-free, wheat-free dough fresh daily - never frozen.
	
	
									
	/ - @pizza_preset = PizzaPreset.find(@order_item.product_info['pizza_preset_id'].to_i)
	- if @pizza_preset.health_check?
		hr		
		.row
			.span1.text-center
				img src="/assets/ui/icn_healthcheck_lrg.png"
				
			.span11		

				small If this item is customized or a dipping sauce is added it will no longer meet Health Check criteria
				br
				small A Health Check&trade; serving is 4 slices of a medium pizza
				br
				small All Health Check&trade; pizza&#x27;s are available on gluten free crust
				br
				
		hr
		
		
	
		
	
- else


	/ FOR CALZONES --------------------------------------------------------------------------------------------------------------------------------------------
	
	- if @order_item && @order_item.product_info['product_name']

		h2.image_heading style="background-image:url(#{@calzone_preset.calzone_image_angled.size_960.url});"
			=@order_item.product_info['product_name']
	
		p.lead You can customize your Calzone below.


	form#add_product

		- if @order_item
	
			| <!-- THere is a calzone!!! -->
			/ editing or updating the order-item
			- if @order_item.id
				input name="product[id]" type="hidden" value="#{@order_item.id}"
		
			input name="product[calzone_preset_id]" type="hidden" value="#{@order_item.product_info['calzone_preset_id']}"
			input name="product[product_type]" type="hidden" value="#{@order_item.product_info['product_type']}"
			input name="product[product_name]" type="hidden" value="#{@order_item.product_info['product_name']}"
	
		- else

			/ new order_item
			input name="product[product_type]" type="hidden" value="calzone"
			input name="product[product_name]" type="hidden" value="Calzone"
			
		
		.row
				
			.span12#product_calzone_size_group class="#{unless @order_item then "hideit" end}"
				h3
					| Select Crust
					- unless @order_item 
						small Step 2 of 5
				fieldset
					- PizzaCrust.where(:active => true).order("name ASC").each do |calzone_crust|
						label.radio
							- if @order_item && @order_item.product_info['calzone_crust'] == calzone_crust.name.parameterize
								input type="radio" name="product[calzone_crust]" value="#{calzone_crust.name.parameterize}" id="product_calzone_crust" checked=""
							- else
								input type="radio" name="product[calzone_crust]" value="#{calzone_crust.name.parameterize}" id="product_calzone_crust"
							= calzone_crust.name
		

		.row#product_toppings_group class="#{unless @order_item then 'hideit' end}"

			.span12
				<br />
				h3
					| Select Additional Toppings
					- unless @order_item
						small Step 3 of 5

			.clear

			- TypeOfTopping.where(:active => true).order("position ASC").each do |type_of_topping|
				.span2.toppings
					legend= type_of_topping.name
					- type_of_topping.toppings.where(:active => true).order("name ASC").each do |topping|
			
						div id=topping.name.parameterize
					
							input name="product[toppings][topping-#{topping.id}][id]" type="hidden" value="#{topping.id}"
							input name="product[toppings][topping-#{topping.id}][name]" type="hidden" value="#{topping.name}"
			
							label.checkbox.small
								- if @order_item.present? && @order_item.product_info['toppings']["topping-#{topping.id}"].present? && @order_item.product_info['toppings']["topping-#{topping.id}"]['selected']
									- selected = true
									input.hideshow_topping type="checkbox" id="product_toppings_topping-#{topping.id}_selected" name="product[toppings][topping-#{topping.id}][selected]" value="1" checked="" data-topping-id="#{topping.id}"
								- else
									- selected = false
									input.hideshow_topping type="checkbox" id="product_toppings_topping-#{topping.id}_selected" name="product[toppings][topping-#{topping.id}][selected]" value="1" data-topping-id="#{topping.id}"
								= topping.name
								| <br />
								- if topping.free_topping?
									small.muted	free
								- else
									small.muted= number_to_currency(@calzone_preset.topping_price)
					
							- pref = topping.name.parameterize + "-preference"
							select.span2.small.topping_preference id="product_toppings_topping-#{topping.id}_preference" name="product[toppings][topping-#{topping.id}][preference]" style="#{unless selected == true then 'display:none;' end}" class="#{unless selected == true then 'hideit' end}" data-topping-preference-id="#{topping.id}"
							
								- if topping.type_of_topping.preference_normal?
									- if @order_item && @order_item.product_info['toppings']["topping-#{topping.id}"].present? && @order_item.product_info['toppings']["topping-#{topping.id}"]['preference'] == "Normal"
										option selected="selected" value="Normal"
											| Normal
									- else
										option value="Normal" Normal
										
								- if topping.type_of_topping.preference_light?
									- if @order_item && @order_item.product_info['toppings']["topping-#{topping.id}"].present? && @order_item.product_info['toppings']["topping-#{topping.id}"]['preference'] == "Light"
										option selected="selected" value="Light"
											| Light
									- else
										option value="Light" Light
										
								- if topping.type_of_topping.preference_extra?
									
									- unless topping.extra_free?
										- topping_price = "topping_price_extra"
									- else
										- topping_price = ""
									
									- if @order_item && @order_item.product_info['toppings']["topping-#{topping.id}"].present? && @order_item.product_info['toppings']["topping-#{topping.id}"]['preference'] == "Extra"
										option selected="selected" value="Extra" class="#{topping_price}"
											| Extra
											- unless topping.extra_free?
												= " + #{number_to_currency(@calzone_preset.topping_price * 1)}"
									- else
										option value="Extra" class="#{topping_price}"
											| Extra 
											- unless topping.extra_free?
												= " + #{number_to_currency(@calzone_preset.topping_price * 1)}"
												
								- if topping.type_of_topping.preference_double?
								
									- unless topping.double_free?
										- topping_price_double = "topping_price_double"
									- else
										- topping_price_double = ""
								
									- if @order_item && @order_item.product_info['toppings']["topping-#{topping.id}"].present? && @order_item.product_info['toppings']["topping-#{topping.id}"]['preference'] == "Double"
										option selected="selected" value="Double" class="#{topping_price_double}"
											| Double
											- unless topping.double_free?
												= " + #{number_to_currency(@calzone_preset.topping_price * 2)}"
									- else
										option value="Double" class="#{topping_price_double}"
											| Double
											- unless topping.double_free?
												= " + #{number_to_currency(@calzone_preset.topping_price * 2)}"

#inline_calculator
	= render(:partial => 'order_items/inline_calculator')
						
