
h3= "Order No: #{@order.order_number}"
	
p Your order has been submitted to your local store. Order confirmation details are below.

p
	| If you have any changes to your order, please contact the store directly: 
	strong =@order.franchise_location.phone
	
p
	strong= raw "This is generated by an automated system, please do not reply to this email.<br />Contact #{mail_to 'customercare@pizzaiolo.ca'} for any questions or concerns."
	
br

- if !@order.order_additional.blank? && @order.order_additional['catering_order'] == "1"
	h4.text-info="Note, This is a Catering Order for #{@order.order_additional['catering_order_group_number']} people."
	
	hr

- unless @order.special_instructions.blank?

	h3 Special Instructions
	= @order.special_instructions
	
br

h3 Order Location
p You ordered from:
p
	strong=@order.franchise_location.address
	p
		span.hidden-phone = @order.franchise_location.phone
	
br

- if @order.for_pickup
	p
		| Your order will be ready for pickup at:
		br
		strong = "#{@order.to_be_ready_dates_string}"

- else

	p
		| Your order will be delivered by:
		br
		strong= "#{@order.to_be_ready_dates_string}"
		br
		small
			em Delivery time is approximate and does not factor in weather and traffic conditions between the hours of 4pm and 7pm.
		
	p
		| Delivering to:
		br
		strong
			= @order.delivery_address_1
			br
			-unless @order.delivery_address_2.blank?
				= @order.delivery_address_2
				br
			= @order.delivery_city
			br
			= @order.delivery_postal_code
			br

-if @order.for_pickup == false
	p.text-info
		strong
			| You have chosen to pay by 
			= @order.method_of_payment.try(:name)
	
	- unless @order.method_of_payment.disclaimer.blank?
		p.muted
			small
				em = @order.method_of_payment.disclaimer
						
						
			br
			br
		


table.table.table-condensed.table-striped.table-bordered width="100%"
	thead
		th
			div align="left" Product
		th
			div align="right" Total Item Price
	tbody
	
		- @order.order_items.each do |order_item|
			tr
				td
					strong
						= order_item.item_title
						-if order_item.custom == true
							|  (Custom)
					br
					small
						- if order_item.product_info['product_type'] != "calzone"
							- if order_item.toppings.count > 0
								= raw "#{pluralize(order_item.num_paid_toppings, 'topping')}<span class='hidden-phone'> : #{order_item.toppings.to_sentence(:last_word_connector => ' and ')}</span>"
							- else
								= raw "#{pluralize(0, 'topping')}"
						- else
							- if order_item.toppings.count > 0
								= raw "#{pluralize(order_item.num_paid_toppings, 'additional topping')}<span class='hidden-phone'> : #{order_item.toppings.to_sentence(:last_word_connector => ' and ')}</span>"
				td
					div align="right"
						= number_to_currency( order_item.price )
						
		- unless @order.order_additional.blank?
			
			// dipping sauces
		
			- @order.order_additional['dipping_sauces'].each do |dipping_sauce|
				- if dipping_sauce[1].to_i > 0
					tr
						td
							strong= "#{get_dipping_sauce_name(dipping_sauce[0])} Dipping Sauce"
							= " "
							small
								= "x #{dipping_sauce[1]}"
						td
							div align="right"
								= number_to_currency( get_dipping_sauce_price_total(dipping_sauce[0],dipping_sauce[1]) )								
			
			
			
			// beverages
		
			- @order.order_additional['beverages'].each do |beverage|
				- if beverage[1].to_i > 0
					tr
						td
							strong= get_beverage_name(beverage[0])
							= " "
							small
								= "x #{beverage[1]}"
						td
							div align="right"
								= number_to_currency( get_beverage_price_total(beverage[0],beverage[1]) )
		
		
			// salads
			- @order.order_additional['salads'].each do |salad|
				- if salad[1].to_i > 0
					tr
						td
							strong= get_salad_name(salad[0])
							= " "
							small
								= "x #{salad[1]}"
						td
							div align="right"
								= number_to_currency(get_salad_price_total(@order, salad[0], salad[1]) )
								
				
			// desserts
			- if @order.order_additional['catering_order'] == "1"
				- @order.order_additional['desserts'].each do |dessert|
					- if dessert[1].to_i > 0
						tr
							td
								strong= "#{get_dessert_name(dessert[0])}"
								= " "
								small
									= "x #{dessert[1]}"
							td
								div align="right"
									= number_to_currency( get_dessert_price_total(dessert[0], dessert[1]))
									
									
									
			// utensils
			- if @order.order_additional['catering_order'] == "1"
				- @order.order_additional['utensils'] && @order.order_additional['utensils'].each do |utensil|
					- if utensil[1].to_i > 0
						tr
							td								
								strong= "#{get_utensil_name(utensil[0])}"
								= " "
								small
									= "x #{utensil[1]}"
							td
								div align="right"
									= "free"
									
										
		- unless @order.total_price_including_sales_tax == 0					
			tr
				td colspan="3"
					div align="right"
						small= "Item(s) Total: #{number_to_currency(@order.total_price)}"

			- unless @order.for_pickup?
				tr
					td colspan="3"
						div align="right"
							small= "Delivery: #{number_to_currency(@order.delivery)}"
					
			tr
				td colspan="3"
					div align="right"
						small= "HST (13%): #{number_to_currency(@order.sales_tax_inc_delivery)}"
						
			tr
				td colspan="3"
					div align="right"
						strong
							| Total 
							small
								| (inc. HST): 
							= number_to_currency(@order.total_price_including_sales_tax_inc_delivery)
									
br
br

div align="center"
	
	h3 Thank you for placing an order at Pizzaiolo.ca
	
	
	
	